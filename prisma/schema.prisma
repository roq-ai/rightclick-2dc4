generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model course {
  id                              String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name                            String   @db.VarChar(255)
  description                     String?  @db.VarChar(255)
  creator_id                      String?  @db.Uuid
  instructor_id                   String?  @db.Uuid
  created_at                      DateTime @default(now()) @db.Timestamp(6)
  updated_at                      DateTime @default(now()) @db.Timestamp(6)
  user_course_creator_idTouser    user?    @relation("course_creator_idTouser", fields: [creator_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_course_instructor_idTouser user?    @relation("course_instructor_idTouser", fields: [instructor_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model organization {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                                String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                             String         @unique @db.VarChar(255)
  firstName                         String?        @db.VarChar(255)
  lastName                          String?        @db.VarChar(255)
  roq_user_id                       String         @db.VarChar(255)
  tenant_id                         String         @db.VarChar(255)
  created_at                        DateTime       @default(now()) @db.Timestamp(6)
  updated_at                        DateTime       @default(now()) @db.Timestamp(6)
  course_course_creator_idTouser    course[]       @relation("course_creator_idTouser")
  course_course_instructor_idTouser course[]       @relation("course_instructor_idTouser")
  organization                      organization[]
}
